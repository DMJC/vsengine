SHELL = /bin/sh

.SUFFIXES:
.SUFFIXES: .S .c .cpp .o .s

.cpp.o:
	$(CXX) $(CXXFLAGS) -c $<

CC = cc
CXX = CC
RANLIB = :

LFLAGS	= -n32 -mips3 -LANG:std
DEFS	= -DIRIX -DHAVE_CONFIG_H -DUSE_STENCIL_BUFFER -MDupdate Makedepend
COPT	= -O3 -OPT:Olimit=0 -OPT:IEEE_arithmetic=1 \
	  -OPT:roundoff=0 -TENV:X=1 -OPT:wrap_around_unsafe_opt=off \
	  -DEBUG:optimize_space=on -OPT:space=on -CG:unique_exit=on \
	  -OPT:unroll_times=0

INCLUDES = -I/usr/freeware/include -I. -I..

CFLAGS	 = ${LFLAGS} ${COPT} ${DEFS} ${INCLUDES}
CXXFLAGS = ${LFLAGS} ${COPT} ${DEFS} ${INCLUDES}
LDFLAGS	 = ${LFLAGS}
LIBS	 = -lGL -lGLU -L/usr/freeware/lib32 -lglut -lexpat -lX11 -lm

SOURCES =		\
	ani_texture.cpp	\
	animation.cpp	\
	aux_logo.cpp	\
	aux_palette.cpp	\
	aux_texture.cpp	\
	background.cpp	\
	bounding_box.cpp	\
	vsbox.cpp		\
	bsp.cpp		\
	camera.cpp	\
	cockpit.cpp	\
	cockpit_xml.cpp	\
	coord_select.cpp	\
	env_map_gent.cpp	\
	gauge.cpp	\
	halo.cpp	\
	hud.cpp		\
	lerp.cpp	\
	loc_select.cpp	\
	mesh.cpp	\
	mesh_bin.cpp	\
	mesh_fx.cpp	\
	mesh_poly.cpp	\
	mesh_xml.cpp	\
	pipelined_texture.cpp	\
	png_texture.cpp	\
	png_write.cpp	\
	quadtree.cpp	\
	quadsquare.cpp	\
	quadsquare_render.cpp	\
	quadsquare_update.cpp	\
	quadsquare_cull.cpp	\
	quadtree_xml.cpp \
	star.cpp	\
	sphere.cpp	\
	sprite.cpp	\
	matrix.cpp	\
	vdu.cpp		\
	vec.cpp	\
	quaternion.cpp

OBJECTS = ${SOURCES:.cpp=.o}

all: libgfx.a

libgfx.a:	${OBJECTS}
	-rm -f $@
	${CXX} -ar -WR,-v -o $@ ${OBJECTS}

clean:;
	-rm -f libgfx.a ${OBJECTS}

include Makedepend

