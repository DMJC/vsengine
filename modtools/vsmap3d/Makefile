#############################################################################
# Makefile for building: "bin/linux/release"/"vsmap3d"
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Thu Mar 10 23:31:01 2011
# Project:  vsmap3d.pro
# Template: app
# Command: $(QMAKE) -o Makefile vsmap3d.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -g -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe -g -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I. -I/usr/include/qt3 -I"moc/linux/release"/
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/share/qt3/lib -L/usr/X11R6/lib -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = "obj/linux/release"/

####### Files

HEADERS = addthread.h \
		faction.h \
		findpathdialog.h \
		glsceene.h \
		mainwindow.h \
		saxhandler.h \
		selectionlist.h \
		starstxt.h \
		system.h \
		universetree.h \
		vsmap3dconfig.h \
		xmlgenerator.h
SOURCES = addthread.cpp \
		findpathdialog.cpp \
		glsceene.cpp \
		main.cpp \
		mainwindow.cpp \
		saxhandler.cpp \
		selectionlist.cpp \
		starstxt.cpp \
		system.cpp \
		universetree.cpp \
		vsmap3dconfig.cpp \
		xmlgenerator.cpp
OBJECTS = "obj/linux/release"/addthread.o \
		"obj/linux/release"/findpathdialog.o \
		"obj/linux/release"/glsceene.o \
		"obj/linux/release"/main.o \
		"obj/linux/release"/mainwindow.o \
		"obj/linux/release"/saxhandler.o \
		"obj/linux/release"/selectionlist.o \
		"obj/linux/release"/starstxt.o \
		"obj/linux/release"/system.o \
		"obj/linux/release"/universetree.o \
		"obj/linux/release"/vsmap3dconfig.o \
		"obj/linux/release"/xmlgenerator.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = "moc/linux/release"/moc_addthread.cpp \
		"moc/linux/release"/moc_findpathdialog.cpp \
		"moc/linux/release"/moc_glsceene.cpp \
		"moc/linux/release"/moc_mainwindow.cpp \
		"moc/linux/release"/moc_selectionlist.cpp \
		"moc/linux/release"/moc_starstxt.cpp \
		"moc/linux/release"/moc_universetree.cpp \
		"moc/linux/release"/moc_vsmap3dconfig.cpp
OBJMOC = "obj/linux/release"/moc_addthread.o \
		"obj/linux/release"/moc_findpathdialog.o \
		"obj/linux/release"/moc_glsceene.o \
		"obj/linux/release"/moc_mainwindow.o \
		"obj/linux/release"/moc_selectionlist.o \
		"obj/linux/release"/moc_starstxt.o \
		"obj/linux/release"/moc_universetree.o \
		"obj/linux/release"/moc_vsmap3dconfig.o
DIST	   = vsmap3d.pro
QMAKE_TARGET = "vsmap3d"
DESTDIR  = "bin/linux/release"/
TARGET   = "bin/linux/release"/"vsmap3d"

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	test -d "bin/linux/release"/ || mkdir -p "bin/linux/release"/
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: vsmap3d.pro  /usr/share/qt3/mkspecs/default/qmake.conf /usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile vsmap3d.pro
qmake: 
	@$(QMAKE) -o Makefile vsmap3d.pro

dist: 
	@mkdir -p "obj/linux/release"/"vsmap3d" && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) "obj/linux/release"/"vsmap3d"/ && ( cd `dirname "obj/linux/release"/"vsmap3d"` && $(TAR) "vsmap3d".tar "vsmap3d" && $(GZIP) "vsmap3d".tar ) && $(MOVE) `dirname "obj/linux/release"/"vsmap3d"`/"vsmap3d".tar.gz . && $(DEL_FILE) -r "obj/linux/release"/"vsmap3d"

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) "bin/linux/release"/$(TARGET) $(TARGET)


FORCE:

####### Compile

"obj/linux/release"/addthread.o: addthread.cpp addthread.h \
		system.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/addthread.o addthread.cpp

"obj/linux/release"/findpathdialog.o: findpathdialog.cpp findpathdialog.h \
		glsceene.h \
		selectionlist.h \
		faction.h \
		system.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/findpathdialog.o findpathdialog.cpp

"obj/linux/release"/glsceene.o: glsceene.cpp glsceene.h \
		faction.h \
		system.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/glsceene.o glsceene.cpp

"obj/linux/release"/main.o: main.cpp mainwindow.h \
		vsmap3dconfig.h \
		starstxt.h \
		system.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/main.o main.cpp

"obj/linux/release"/mainwindow.o: mainwindow.cpp mainwindow.h \
		universetree.h \
		glsceene.h \
		system.h \
		findpathdialog.h \
		faction.h \
		vsmap3dconfig.h \
		starstxt.h \
		addthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/mainwindow.o mainwindow.cpp

"obj/linux/release"/saxhandler.o: saxhandler.cpp saxhandler.h \
		vsmap3dconfig.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/saxhandler.o saxhandler.cpp

"obj/linux/release"/selectionlist.o: selectionlist.cpp selectionlist.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/selectionlist.o selectionlist.cpp

"obj/linux/release"/starstxt.o: starstxt.cpp starstxt.h \
		vsmap3dconfig.h \
		faction.h \
		system.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/starstxt.o starstxt.cpp

"obj/linux/release"/system.o: system.cpp system.h \
		faction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/system.o system.cpp

"obj/linux/release"/universetree.o: universetree.cpp universetree.h \
		system.h \
		faction.h \
		addthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/universetree.o universetree.cpp

"obj/linux/release"/vsmap3dconfig.o: vsmap3dconfig.cpp vsmap3dconfig.h \
		saxhandler.h \
		xmlgenerator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/vsmap3dconfig.o vsmap3dconfig.cpp

"obj/linux/release"/xmlgenerator.o: xmlgenerator.cpp xmlgenerator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/xmlgenerator.o xmlgenerator.cpp

"obj/linux/release"/moc_addthread.o: "moc/linux/release"/moc_addthread.cpp  addthread.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/moc_addthread.o "moc/linux/release"/moc_addthread.cpp

"obj/linux/release"/moc_findpathdialog.o: "moc/linux/release"/moc_findpathdialog.cpp  findpathdialog.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/moc_findpathdialog.o "moc/linux/release"/moc_findpathdialog.cpp

"obj/linux/release"/moc_glsceene.o: "moc/linux/release"/moc_glsceene.cpp  glsceene.h system.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/moc_glsceene.o "moc/linux/release"/moc_glsceene.cpp

"obj/linux/release"/moc_mainwindow.o: "moc/linux/release"/moc_mainwindow.cpp  mainwindow.h vsmap3dconfig.h \
		starstxt.h \
		system.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/moc_mainwindow.o "moc/linux/release"/moc_mainwindow.cpp

"obj/linux/release"/moc_selectionlist.o: "moc/linux/release"/moc_selectionlist.cpp  selectionlist.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/moc_selectionlist.o "moc/linux/release"/moc_selectionlist.cpp

"obj/linux/release"/moc_starstxt.o: "moc/linux/release"/moc_starstxt.cpp  starstxt.h system.h \
		vsmap3dconfig.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/moc_starstxt.o "moc/linux/release"/moc_starstxt.cpp

"obj/linux/release"/moc_universetree.o: "moc/linux/release"/moc_universetree.cpp  universetree.h addthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/moc_universetree.o "moc/linux/release"/moc_universetree.cpp

"obj/linux/release"/moc_vsmap3dconfig.o: "moc/linux/release"/moc_vsmap3dconfig.cpp  vsmap3dconfig.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "obj/linux/release"/moc_vsmap3dconfig.o "moc/linux/release"/moc_vsmap3dconfig.cpp

"moc/linux/release"/moc_addthread.cpp: $(MOC) addthread.h
	$(MOC) addthread.h -o "moc/linux/release"/moc_addthread.cpp

"moc/linux/release"/moc_findpathdialog.cpp: $(MOC) findpathdialog.h
	$(MOC) findpathdialog.h -o "moc/linux/release"/moc_findpathdialog.cpp

"moc/linux/release"/moc_glsceene.cpp: $(MOC) glsceene.h
	$(MOC) glsceene.h -o "moc/linux/release"/moc_glsceene.cpp

"moc/linux/release"/moc_mainwindow.cpp: $(MOC) mainwindow.h
	$(MOC) mainwindow.h -o "moc/linux/release"/moc_mainwindow.cpp

"moc/linux/release"/moc_selectionlist.cpp: $(MOC) selectionlist.h
	$(MOC) selectionlist.h -o "moc/linux/release"/moc_selectionlist.cpp

"moc/linux/release"/moc_starstxt.cpp: $(MOC) starstxt.h
	$(MOC) starstxt.h -o "moc/linux/release"/moc_starstxt.cpp

"moc/linux/release"/moc_universetree.cpp: $(MOC) universetree.h
	$(MOC) universetree.h -o "moc/linux/release"/moc_universetree.cpp

"moc/linux/release"/moc_vsmap3dconfig.cpp: $(MOC) vsmap3dconfig.h
	$(MOC) vsmap3dconfig.h -o "moc/linux/release"/moc_vsmap3dconfig.cpp

####### Install

install:  

uninstall:  

