/*
 * CampaignTreeDisplay.java
 *
 * Created on December 2, 2006, 6:48 PM
 */

package campaigneditor.display;

import campaigneditor.AbstractCampaignNode;
import campaigneditor.Campaign;
import campaigneditor.CampaignNodeFactory;
import campaigneditor.CampaignNodeFactory.CampaignNodeType;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeSelectionModel;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;

/**
 *
 * @author  daniel
 */
public class CampaignTreeDisplay extends javax.swing.JPanel
{
    private Campaign campaign;
    private MainFrameDisplay maindisplay;
    
    /** Creates new form CampaignList */
    public CampaignTreeDisplay(MainFrameDisplay maindisplay)
    {
        this.maindisplay = maindisplay;
        this.campaign = new Campaign();
        DefaultTreeModel treemodel = new DefaultTreeModel(this.makeCampaignTree());
        
        initComponents();
        
        this.campaignTree.setModel(treemodel);
        this.campaignTree.getSelectionModel().setSelectionMode
            (TreeSelectionModel.SINGLE_TREE_SELECTION);
    }
    
    public void setCampaign(Campaign campaign)
    {
        try
        {
            this.maindisplay.hideCampaignNode();            
        }
        catch (Exception e)
        {
            System.out.println("No node active.");
        }
        this.campaign = campaign;
        this.remakeCampaignTree();
    }
    
    public Campaign getCampaign()
    {
        return this.campaign;
    }
    
    private DefaultMutableTreeNode makeCampaignTree()
    {
        DefaultMutableTreeNode top = new DefaultMutableTreeNode(this.campaign);
        for (int i = 0; i < this.campaign.getNodeList().length; i++)
        {
            top.add(new DefaultMutableTreeNode(this.campaign.getNodeList()[i]));
        }
        return top;
    }
    
    private void remakeCampaignTree()
    {
        DefaultTreeModel treemodel = new DefaultTreeModel(this.makeCampaignTree());
        this.campaignTree.setModel(treemodel);
    }
    
    private void editSelectedNode()
    {
        DefaultMutableTreeNode node = (DefaultMutableTreeNode)
                           this.campaignTree.getLastSelectedPathComponent();
        if (node != null)
        {
            AbstractCampaignNode campaignnode;
            Object nodeInfo = node.getUserObject();
            if (node.isLeaf())
            {
                campaignnode = (AbstractCampaignNode) nodeInfo;
                CampaignNodeDisplay displaycn = CampaignNodeDisplayFactory.getCampaignNodeDisplay(campaignnode, this.campaign);
                System.out.println(displaycn.toString());
                this.maindisplay.showCampaignNode(displaycn);
            }
            else
            {
                System.out.println("Selected object is not a campaignnode?");
                this.maindisplay.hideCampaignNode();
            }
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        removeNodeButton = new javax.swing.JButton();
        addNodeButton = new javax.swing.JButton();
        modifyNodeButton = new javax.swing.JButton();
        treeContainerPane = new javax.swing.JScrollPane();
        campaignTree = new javax.swing.JTree();

        setOpaque(false);
        removeNodeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/campaigneditor/resources/node-delete.png")));
        removeNodeButton.setOpaque(false);
        removeNodeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeNodeButtonMouseClicked(evt);
            }
        });

        addNodeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/campaigneditor/resources/node-new.png")));
        addNodeButton.setOpaque(false);
        addNodeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addNodeButtonMouseClicked(evt);
            }
        });

        modifyNodeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/campaigneditor/resources/node-modify.png")));
        modifyNodeButton.setOpaque(false);
        modifyNodeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modifyNodeButtonMouseClicked(evt);
            }
        });

        campaignTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                campaignTreeMouseClicked(evt);
            }
        });

        treeContainerPane.setViewportView(campaignTree);

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(treeContainerPane, GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addNodeButton, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeNodeButton, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                        .addComponent(modifyNodeButton, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(treeContainerPane, GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(addNodeButton, GroupLayout.PREFERRED_SIZE, 26, GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeNodeButton, GroupLayout.PREFERRED_SIZE, 26, GroupLayout.PREFERRED_SIZE)
                    .addComponent(modifyNodeButton, GroupLayout.PREFERRED_SIZE, 26, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void modifyNodeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyNodeButtonMouseClicked
        this.editSelectedNode();
    }//GEN-LAST:event_modifyNodeButtonMouseClicked

    private void removeNodeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeNodeButtonMouseClicked
        DefaultMutableTreeNode node = (DefaultMutableTreeNode)
                           this.campaignTree.getLastSelectedPathComponent();
        if (node != null)
        {
            AbstractCampaignNode campaignnode;
            Object nodeInfo = node.getUserObject();
            if (node.isLeaf())
            {
                campaignnode = (AbstractCampaignNode) nodeInfo;
                this.campaign.deleteNode(campaignnode);
                this.remakeCampaignTree();
            }
            else
            {
                System.out.println("Selected object is not a campaignnode?");
            }
        }
    }//GEN-LAST:event_removeNodeButtonMouseClicked

    private void addNodeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addNodeButtonMouseClicked
        Object selectedValue;
        selectedValue = JOptionPane.showInputDialog(null,
                "Enter a name for the new campaign node.", "Campaign Node Name",
                JOptionPane.INFORMATION_MESSAGE, null,
                null, "DefaultNode");
        String nodename = (String) selectedValue;
        if ((nodename != null) && (nodename.length() > 0))//FIXME: value is valid
        {
            Object[] possibleValues = CampaignNodeFactory.CampaignNodeType.values();
            selectedValue = JOptionPane.showInputDialog(null,
                "<html>What node type is <i>"+nodename+"</i></html>",
                "Node Type Selection", JOptionPane.QUESTION_MESSAGE, null,
                possibleValues, possibleValues[0]);
            String inputValue = "test";//(String) selectedValue;
            if ((inputValue != null) && (inputValue.length() > 0))//value is valid
            {
                AbstractCampaignNode newnode = CampaignNodeFactory.getCampaignNode((CampaignNodeType) selectedValue);
                newnode.setName(nodename);
                this.campaign.addNode(newnode);//Bypassing validity check, as is no longer string
                this.remakeCampaignTree();
            }
        }
    }//GEN-LAST:event_addNodeButtonMouseClicked

    private void campaignTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campaignTreeMouseClicked
        if (evt.getClickCount() == 2)
        {
            editSelectedNode();
        }
    }//GEN-LAST:event_campaignTreeMouseClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNodeButton;
    private javax.swing.JTree campaignTree;
    private javax.swing.JButton modifyNodeButton;
    private javax.swing.JButton removeNodeButton;
    private javax.swing.JScrollPane treeContainerPane;
    // End of variables declaration//GEN-END:variables
    
}
